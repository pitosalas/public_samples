{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport ApplicationController from './application_controller';\n/* This is the custom StimulusReflex controller for the Example Reflex.\n * Learn more at: https://docs.stimulusreflex.com\n */\n\nvar _default = /*#__PURE__*/function (_ApplicationControlle) {\n  _inherits(_default, _ApplicationControlle);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_default, [{\n    key: \"connect\",\n    value:\n    /*\n     * Regular Stimulus lifecycle methods\n     * Learn more at: https://stimulusjs.org/reference/lifecycle-callbacks\n     *\n     * If you intend to use this controller as a regular stimulus controller as well,\n     * make sure any Stimulus lifecycle methods overridden in ApplicationController call super.\n     *\n     * Important:\n     * By default, StimulusReflex overrides the -connect- method so make sure you\n     * call super if you intend to do anything else when this controller connects.\n    */\n    function connect() {\n      _get(_getPrototypeOf(_default.prototype), \"connect\", this).call(this); // add your code here, if applicable\n\n    }\n    /* Reflex specific lifecycle methods.\n     *\n     * For every method defined in your Reflex class, a matching set of lifecycle methods become available\n     * in this javascript controller. These are optional, so feel free to delete these stubs if you don't\n     * need them.\n     *\n     * Important:\n     * Make sure to add data-controller=\"example\" to your markup alongside\n     * data-reflex=\"Example#dance\" for the lifecycle methods to fire properly.\n     *\n     * Example:\n     *\n     *   <a href=\"#\" data-reflex=\"click->Example#dance\" data-controller=\"example\">Dance!</a>\n     *\n     * Arguments:\n     *\n     *   element - the element that triggered the reflex\n     *             may be different than the Stimulus controller's this.element\n     *\n     *   reflex - the name of the reflex e.g. \"Example#dance\"\n     *\n     *   error/noop - the error message (for reflexError), otherwise null\n     *\n     *   reflexId - a UUID4 or developer-provided unique identifier for each Reflex\n     */\n    // Assuming you create a \"Example#dance\" action in your Reflex class\n    // you'll be able to use the following lifecycle methods:\n    // beforeDance(element, reflex, noop, reflexId) {\n    //  element.innerText = 'Putting dance shoes on...'\n    // }\n    // danceSuccess(element, reflex, noop, reflexId) {\n    //   element.innerText = '\\nDanced like no one was watching! Was someone watching?'\n    // }\n    // danceError(element, reflex, error, reflexId) {\n    //   console.error('danceError', error);\n    //   element.innerText = \"\\nCouldn\\'t dance!\"\n    // }\n    // afterDance(element, reflex, noop, reflexId) {\n    //   element.innerText = '\\nWhatever that was, it\\'s over now.'\n    // }\n    // finalizeDance(element, reflex, noop, reflexId) {\n    //   element.innerText = '\\nNow, the cleanup can begin!'\n    // }\n\n  }]);\n\n  return _default;\n}(ApplicationController);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/pitosalas/mydev/public_samples/rails/chatter/app/javascript/controllers/example_controller.js"],"names":["ApplicationController"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,qBAAP,MAAkC,0BAAlC;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE,uBAAW;AACT,4EADS,CAET;;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;EAlE2BA,qB","sourcesContent":["import ApplicationController from './application_controller'\n\n/* This is the custom StimulusReflex controller for the Example Reflex.\n * Learn more at: https://docs.stimulusreflex.com\n */\nexport default class extends ApplicationController {\n  /*\n   * Regular Stimulus lifecycle methods\n   * Learn more at: https://stimulusjs.org/reference/lifecycle-callbacks\n   *\n   * If you intend to use this controller as a regular stimulus controller as well,\n   * make sure any Stimulus lifecycle methods overridden in ApplicationController call super.\n   *\n   * Important:\n   * By default, StimulusReflex overrides the -connect- method so make sure you\n   * call super if you intend to do anything else when this controller connects.\n  */\n\n  connect () {\n    super.connect()\n    // add your code here, if applicable\n  }\n\n  /* Reflex specific lifecycle methods.\n   *\n   * For every method defined in your Reflex class, a matching set of lifecycle methods become available\n   * in this javascript controller. These are optional, so feel free to delete these stubs if you don't\n   * need them.\n   *\n   * Important:\n   * Make sure to add data-controller=\"example\" to your markup alongside\n   * data-reflex=\"Example#dance\" for the lifecycle methods to fire properly.\n   *\n   * Example:\n   *\n   *   <a href=\"#\" data-reflex=\"click->Example#dance\" data-controller=\"example\">Dance!</a>\n   *\n   * Arguments:\n   *\n   *   element - the element that triggered the reflex\n   *             may be different than the Stimulus controller's this.element\n   *\n   *   reflex - the name of the reflex e.g. \"Example#dance\"\n   *\n   *   error/noop - the error message (for reflexError), otherwise null\n   *\n   *   reflexId - a UUID4 or developer-provided unique identifier for each Reflex\n   */\n\n  // Assuming you create a \"Example#dance\" action in your Reflex class\n  // you'll be able to use the following lifecycle methods:\n\n  // beforeDance(element, reflex, noop, reflexId) {\n  //  element.innerText = 'Putting dance shoes on...'\n  // }\n\n  // danceSuccess(element, reflex, noop, reflexId) {\n  //   element.innerText = '\\nDanced like no one was watching! Was someone watching?'\n  // }\n\n  // danceError(element, reflex, error, reflexId) {\n  //   console.error('danceError', error);\n  //   element.innerText = \"\\nCouldn\\'t dance!\"\n  // }\n\n  // afterDance(element, reflex, noop, reflexId) {\n  //   element.innerText = '\\nWhatever that was, it\\'s over now.'\n  // }\n\n  // finalizeDance(element, reflex, noop, reflexId) {\n  //   element.innerText = '\\nNow, the cleanup can begin!'\n  // }\n}\n"]},"metadata":{},"sourceType":"module"}