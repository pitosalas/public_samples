{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { Controller } from 'stimulus';\nimport StimulusReflex from 'stimulus_reflex';\n/* This is your ApplicationController.\n * All StimulusReflex controllers should inherit from this class.\n *\n * Example:\n *\n *   import ApplicationController from './application_controller'\n *\n *   export default class extends ApplicationController { ... }\n *\n * Learn more at: https://docs.stimulusreflex.com\n */\n\nvar _default = /*#__PURE__*/function (_Controller) {\n  _inherits(_default, _Controller);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(_default, [{\n    key: \"connect\",\n    value: function connect() {\n      StimulusReflex.register(this);\n    }\n    /* Application-wide lifecycle methods\n     *\n     * Use these methods to handle lifecycle concerns for the entire application.\n     * Using the lifecycle is optional, so feel free to delete these stubs if you don't need them.\n     *\n     * Arguments:\n     *\n     *   element - the element that triggered the reflex\n     *             may be different than the Stimulus controller's this.element\n     *\n     *   reflex - the name of the reflex e.g. \"Example#demo\"\n     *\n     *   error/noop - the error message (for reflexError), otherwise null\n     *\n     *   reflexId - a UUID4 or developer-provided unique identifier for each Reflex\n     */\n\n  }, {\n    key: \"beforeReflex\",\n    value: function beforeReflex(element, reflex, noop, reflexId) {// document.body.classList.add('wait')\n    }\n  }, {\n    key: \"reflexSuccess\",\n    value: function reflexSuccess(element, reflex, noop, reflexId) {// show success message\n    }\n  }, {\n    key: \"reflexError\",\n    value: function reflexError(element, reflex, error, reflexId) {// show error message\n    }\n  }, {\n    key: \"reflexHalted\",\n    value: function reflexHalted(element, reflex, error, reflexId) {// handle aborted Reflex action\n    }\n  }, {\n    key: \"afterReflex\",\n    value: function afterReflex(element, reflex, noop, reflexId) {// document.body.classList.remove('wait')\n    }\n  }, {\n    key: \"finalizeReflex\",\n    value: function finalizeReflex(element, reflex, noop, reflexId) {// all operations have completed, animation etc is now safe\n    }\n  }]);\n\n  return _default;\n}(Controller);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/pitosalas/mydev/public_samples/rails/chatter/app/javascript/controllers/application_controller.js"],"names":["Controller","StimulusReflex","register","element","reflex","noop","reflexId","error"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,UAA3B;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;WAEE,mBAAW;AACTA,MAAAA,cAAc,CAACC,QAAf,CAAwB,IAAxB;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WAEE,sBAAcC,OAAd,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAqCC,QAArC,EAA+C,CAC7C;AACD;;;WAED,uBAAeH,OAAf,EAAwBC,MAAxB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgD,CAC9C;AACD;;;WAED,qBAAaH,OAAb,EAAsBC,MAAtB,EAA8BG,KAA9B,EAAqCD,QAArC,EAA+C,CAC7C;AACD;;;WAED,sBAAcH,OAAd,EAAuBC,MAAvB,EAA+BG,KAA/B,EAAsCD,QAAtC,EAAgD,CAC9C;AACD;;;WAED,qBAAaH,OAAb,EAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCC,QAApC,EAA8C,CAC5C;AACD;;;WAED,wBAAgBH,OAAhB,EAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,QAAvC,EAAiD,CAC/C;AACD;;;;EA5C0BN,U","sourcesContent":["import { Controller } from 'stimulus'\nimport StimulusReflex from 'stimulus_reflex'\n\n/* This is your ApplicationController.\n * All StimulusReflex controllers should inherit from this class.\n *\n * Example:\n *\n *   import ApplicationController from './application_controller'\n *\n *   export default class extends ApplicationController { ... }\n *\n * Learn more at: https://docs.stimulusreflex.com\n */\nexport default class extends Controller {\n  connect () {\n    StimulusReflex.register(this)\n  }\n\n  /* Application-wide lifecycle methods\n   *\n   * Use these methods to handle lifecycle concerns for the entire application.\n   * Using the lifecycle is optional, so feel free to delete these stubs if you don't need them.\n   *\n   * Arguments:\n   *\n   *   element - the element that triggered the reflex\n   *             may be different than the Stimulus controller's this.element\n   *\n   *   reflex - the name of the reflex e.g. \"Example#demo\"\n   *\n   *   error/noop - the error message (for reflexError), otherwise null\n   *\n   *   reflexId - a UUID4 or developer-provided unique identifier for each Reflex\n   */\n\n  beforeReflex (element, reflex, noop, reflexId) {\n    // document.body.classList.add('wait')\n  }\n\n  reflexSuccess (element, reflex, noop, reflexId) {\n    // show success message\n  }\n\n  reflexError (element, reflex, error, reflexId) {\n    // show error message\n  }\n\n  reflexHalted (element, reflex, error, reflexId) {\n    // handle aborted Reflex action\n  }\n\n  afterReflex (element, reflex, noop, reflexId) {\n    // document.body.classList.remove('wait')\n  }\n\n  finalizeReflex (element, reflex, noop, reflexId) {\n    // all operations have completed, animation etc is now safe\n  }\n}\n"]},"metadata":{},"sourceType":"module"}