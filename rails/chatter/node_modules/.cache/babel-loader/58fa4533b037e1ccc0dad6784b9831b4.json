{"ast":null,"code":"import { mutableTags } from './enums';\nimport { isTextInput } from './utils';\nimport { activeElement } from './cable_ready';\nexport var verifyNotMutable = function verifyNotMutable(detail, fromEl, toEl) {\n  // Skip nodes that are equal:\n  // https://github.com/patrick-steele-idem/morphdom#can-i-make-morphdom-blaze-through-the-dom-tree-even-faster-yes\n  if (!mutableTags[fromEl.tagName] && fromEl.isEqualNode(toEl)) return false;\n  return true;\n};\nexport var verifyNotPermanent = function verifyNotPermanent(detail, fromEl, toEl) {\n  var permanentAttributeName = detail.permanentAttributeName;\n  if (!permanentAttributeName) return true;\n  var permanent = fromEl.closest(\"[\".concat(permanentAttributeName, \"]\")); // only morph attributes on the active non-permanent text input\n\n  if (!permanent && isTextInput(fromEl) && fromEl === activeElement) {\n    var ignore = {\n      value: true\n    };\n    Array.from(toEl.attributes).forEach(function (attribute) {\n      if (!ignore[attribute.name]) fromEl.setAttribute(attribute.name, attribute.value);\n    });\n    return false;\n  }\n\n  return !permanent;\n};","map":null,"metadata":{},"sourceType":"module"}